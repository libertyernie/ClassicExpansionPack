@model DocumentationGenerator.Models.MainModel

<!DOCTYPE html PUBLIC "-//W3C//DTD HTML 4.01 Transitional//EN">
<html>
<head>
    <meta http-equiv="content-type" content="text/html; charset=UTF-8">
    <title>Classic Expansion Pack 8.0s</title>
    <style type="text/css">
        h1, h2, h3, h4, h5, h6 {
            font-family: Helvetica, Arial, monospace;
        }

        h1 {
            font-size: 36pt;
        }

        h2 {
            font-size: 24pt;
        }

        .stagetable {
            border-collapse: collapse;
        }

        .stagetable td {
            border: 2px solid black;
        }

        .stagetable.alternate {
            margin-left: 36px;
        }

        .stagetable .icon {
            width: 68px;
        }

        .stagetable.alternate .icon {
            font-size: 10pt;
            font-family: Helvetica, Arial, sans-serif;
            width: 32px;
            text-align: center;
        }

        .stagetable .song {
            font-style: italic;
        }

        .stagetable .stagename {
            font-family: Helvetica, Arial, sans-serif;
            font-size: 32px;
            font-weight: bold;
            width: 400px;
        }

        .stagetable .pacname {
            font-family: monospace;
            font-size: 12pt;
            text-align: right;
            width: 430px;
        }

        .stagetable .notes {
            font-size: 10pt;
            font-family: Helvetica, Arial, sans-serif;
        }
    </style>
</head>
<body>
    <h1 align="center">
        Classic Expansion Pack 8.0s<br>
        <small>for Super Smash Bros. Brawl</small>
    </h1>
    <p>
        This version of the Classic Expansion Pack is an add-on for Super
        Smash Bros. Brawl, containing 37 additional stages that can be
        used in multiplayer mode. The selection includes 35 stages from
        other Super Smash Bros. games, as well as Brawl's Online
        Practice Stage and separate versions of Castle Siege's 3 phases.
    </p>
    <p>
        These stages have been combined into a pack that adds them to the
        Brawl stage roster, without replacing any existing stages. This is
        done with the help of Phantom Wings' Stage Roster Expansion
        System, a code that gives the framework for adding stages to
        Brawl. The pack serves a dual purpose: it is fully playable out of
        the box, but it also provides a framework for people to add their
        own custom stages to the game. To replace the stages and stage
        icons in this pack, you can try my <a href="http://www.lakora.us/brawl/stagemanager/">Stage Manager</a>
        tool.<br>
    </p>
    <p>
        This pack contains several Wii music files (.brstm), which are
		added to the game using the Custom Sound Engine code. Song titles
		for these songs may not appear if you're using Gecko, but they
		should show up with Riivolution.
    </p>
    <hr size="2" width="100%">
    <p>
        Official KC-MM thread for the Classic Expansion Pack: <a href="http://forums.kc-mm.com/index.php?topic=20291.0">http://forums.kc-mm.com/index.php?topic=20291.0</a><br>
    </p>
    <hr size="2" width="100%">
    <p>
        Requirements:<br>
    </p>
    <ul>
        <li>
            Wii or Wii U console (does not need to have any kind of
            homebrew installed)
        </li>
        <li>An American copy of Super Smash Bros. Brawl</li>
        <li>An SD card</li>
    </ul>
    <p>
        Instructions:<br>
		(If you have homebrew installed, you can just launch either Gecko
		OS or Riivolution from there.)
    </p>
    <ul>
        <li>
            Remove all Stage Builder stages from your SD card and your
            Wii. (You can back them up on another SD card or on your
            computer – they're in /private/wii/app/RSBE/st.)
        </li>
        <li>
            Copy the “codes” and “private” folders and the “boot.elf” and
            “gameconfig.txt” files to the root of your SD card. (Riivolution
			users should copy the “riivolution” folder too.) If you're
            asked to merge a folder, choose yes. If you're asked to
            overwrite a file, choose yes for that too. (If you have custom
            portraits or stage icons in common5.pac, you should back that up
            first.)
        </li>
        <li>
            Once in Brawl's main menu, load the Classic Expansion Pack by
            inserting the SD card and going to Options &gt; Stage Builder.
            Press A (for “Launch Game”) when Gecko OS loads.
        </li>
    </ul>
    <p>
        If you want to keep your own mu_menumain.pac, export MiscData[80]
        from sc_selmap.pac and use it to replace MiscData[0] in
        mu_menumain.pac.
    </p>
    <p>
        <b>
            NOTE: Unlike pre-7.0s versions of the pack, this pack comes with a
            sc_selmap.pac instead of a common5.pac.
        </b> If you have your own
        common5.pac, replace the “sc_selmap_en” section in it with my
        sc_selmap.pac file. (After doing this, sc_selmap.pac does not need
        to be on the SD card.)<br>
		Riivolution users will still need to use common5; the ocarina.xml file
		loads one from the /riivolution folder, although you can move it to
		private/wii/app/RSBE/pf/system if you like.
    </p>
    <hr size="2" width="100%">
    <p>
        Other notes:<br>
    </p>
    <ul>
        <li>
            Any additional changes I made to the stages, as originally
            posted on BrawlVault, are noted.
        </li>
        <li>
            All stages will be available on “random”, regardless of
            whether they are enabled on the Random Stage Select screen. You
            can turn this off by removing the Enable Random Expansion Stages
            code from Codeset.txt and making a new GCT file from it.
        </li>
    </ul>
    <hr size="2" width="100%">
    <p>
        The Alternate Stage/Rel Loader (ASRL) code is enabled for every
        STGCUSTOM## stage in this pack, loading [NAME]_L.pac instead of [NAME].pac
        when you hold L (or B on a Wii Remote) while loading the
        stage. For some Brawl stages, one or more alternate versions
        are also available.<br>
    </p>
    <p>
        Also note that the second song on Battlefield – T02.brstm,
        originally <i>Menu (Super Smash Bros. Melee)</i> – has been
        replaced with <i>Fighting Polygon Team (Super Smash Bros.)</i><br>
    </p>
	<hr>
	<p>
		For each stage below, the creator of the stage is noted. Let me know
		on KC:MM if I've forgot to mention anyone. Creators of the codes used
		in the codeset are credited in Codeset.txt.
	</p>
    @{ 
        BrawlManagerLib.Song song;
    }
    @foreach (var stage in Model.Stages) {
        int lastUnderscore = stage.Filename.LastIndexOf('_');
        <table class="stagetable @(stage.Alternate ? "alternate" : "")" border="1" cellpadding="2" cellspacing="2">
            <tbody>
                <tr>
                    @if (stage.PngIcon != null) {
                        <td rowspan="2" class="icon" valign="top">
                            <img src="data:image/png;base64,@(Convert.ToBase64String(stage.PngIcon))" />
                        </td>
                    } else {
                        <td rowspan="2" class="icon" valign="middle">
                            @if (lastUnderscore > 0) {
                                switch (stage.Filename[lastUnderscore + 1]) {
                                    case 'L':
                                        <span class="altkey">+L</span>
                                        break;
                                    case 'R':
                                        <span class="altkey">+R</span>
                                        break;
                                    case 'Z':
                                        <span class="altkey">+Z or +ZR</span>
                                        break;
                                    case 'X':
                                        <span class="altkey">+X</span>
                                        break;
                                }
                            }
                        </td>
                    }
                    <td class="game" valign="top" colspan="@(stage.Alternate ? 2 : 1)">
                        @stage.Source
                    </td>
                    @if (!stage.Alternate) {
                        <td class="song" valign="top">
                            @if (Model.Sdsl.TryGetSong(stage.Stage.ID, out song)) {
                                @song.Filename
                                } else if (stage.Stage.ID == 0x37) {
                                @:X07
                            }
                            @stage.SongName
                        </td>
                    }
                </tr>
                <tr>
                    <td class="stagename" valign="top">
                        @stage.Name
                    </td>
                    <td class="pacname" valign="bottom">
                        (@stage.ModuleBase)
                        <br />
                        @stage.Filename
                    </td>
                </tr>
                <tr>
                    <td class="notes" colspan="3" valign="top">
                        @if (stage.Link.StartsWith("http")) {
                            <a href="@stage.Link">@stage.Link</a><br />
                        } else {
                            <b>@stage.Link</b><br />
                        }
                        @if (stage.Imported) {
                            @:Imported from SSB4 by: @stage.Author<br />
                        } else if (stage.Author != null) {
                            @:Author(s): @stage.Author<br />
                        }
                        @if (stage.Notes != null) {
                            <b><i>@stage.Notes</i></b>
                        }
                    </td>
                </tr>
            </tbody>
        </table>
        <br />
    }
	<p>
		Special thanks:
		<ul>
			<li>Mewtwo2000 for creating many SSB64 and Melee stages</li>
			<li>DSX8, Edwguard Flows, and CaliburZx for SSB4 stages</li>
			<li>Dantarion for the Alternate Stage Loader and Custom Sound Engine</li>
			<li>PyotrLuzhin for updated versions of said codes</li>
			<li>Phanton Wings for the File Patch Code and Stage Roster Expansion System</li>
		</ul>
	</p>
</body>
</html>
